{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xDE9D935D7ad652b2c6F4CF3e9F615a905530F25B",
      "txHash": "0xf8bea51a453bb0363dfebd43e5606b9806ef4c73eeedc71f103e390a4a067718",
      "kind": "uups"
    },
    {
      "address": "0x78254357e923c6Ec2F86e4Cf3c84a0c4a462d874",
      "txHash": "0x8329207c1e179f870e04b4e928ab8dc667f4ba2e352a791c4b768f7438e2291d",
      "kind": "uups"
    }
  ],
  "impls": {
    "58b671d23665011631370fc304fae26ef4c4fdadb52ecb554825587e224215ce": {
      "address": "0x84754932A2572C14820Ec7BB01A26367Ad9aB31a",
      "txHash": "0xb52648ef949bb265dde1a8b14d9f14142f57515ce482915ef39b40e25695c18b",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Box",
            "src": "contracts/Box.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)48_storage",
            "contract": "Box",
            "src": "contracts/Box.sol:12"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)951_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)901_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "8522b412687cbe0ccb9f97bf676ff14d59737d1ccedd259d512553cf1b3aaa21": {
      "address": "0x00058C2BAe1D7054Dc58d10fF7ffAFEAfeCC0488",
      "txHash": "0xff4da2a7085745281ebb0966f0105b5260ab875ef30ea61824e7db823db08799",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Box",
            "src": "contracts/Box.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)48_storage",
            "contract": "Box",
            "src": "contracts/Box.sol:12"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)951_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)901_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "82a15477d5cbea9f90a166deb9ae21e38f93b7ec3f36870e891414fffd24e499": {
      "address": "0xe89ba8c20Bc7265b5224F6dDcf6f002F967f4F24",
      "txHash": "0x5c7a0a8d3ffe6eff75f04c4f579b36614bed1aed966c066df61e2c157997a3d7",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "swapHelper",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:53"
          },
          {
            "label": "minDepositAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:56"
          },
          {
            "label": "maxDepositAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:59"
          },
          {
            "label": "flags",
            "offset": 0,
            "slot": "3",
            "type": "t_uint8",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:62"
          },
          {
            "label": "additionalLtvDistancePercent",
            "offset": 1,
            "slot": "3",
            "type": "t_uint8",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:67"
          },
          {
            "label": "minRebalancePercent",
            "offset": 2,
            "slot": "3",
            "type": "t_uint8",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:72"
          },
          {
            "label": "eightBitGap1",
            "offset": 3,
            "slot": "3",
            "type": "t_uint8",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:74"
          },
          {
            "label": "aaveAddressProvider",
            "offset": 4,
            "slot": "3",
            "type": "t_contract(IPoolAddressesProvider)923",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:76"
          },
          {
            "label": "balancerVault",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:78"
          },
          {
            "label": "pool",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IPool)714",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:80"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IAaveOracle)75",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:81"
          },
          {
            "label": "stableToken",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IERC20)4532",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:84"
          },
          {
            "label": "mainToken",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(IERC20)4532",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:87"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "8",
            "type": "t_uint8",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:89"
          },
          {
            "label": "stableTokenDecimals",
            "offset": 21,
            "slot": "8",
            "type": "t_uint8",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:91"
          },
          {
            "label": "mainTokenDecimals",
            "offset": 22,
            "slot": "8",
            "type": "t_uint8",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:92"
          },
          {
            "label": "isMock",
            "offset": 23,
            "slot": "8",
            "type": "t_bool",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:93"
          },
          {
            "label": "eightBitGap2",
            "offset": 24,
            "slot": "8",
            "type": "t_uint8",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)40_storage",
            "contract": "DeltaNeutralDollar2",
            "src": "contracts/DeltaNeutralDollar2.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)1085_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)951_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)901_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_contract(IAaveOracle)75": {
            "label": "contract IAaveOracle",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)4532": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPool)714": {
            "label": "contract IPool",
            "numberOfBytes": "20"
          },
          "t_contract(IPoolAddressesProvider)923": {
            "label": "contract IPoolAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
